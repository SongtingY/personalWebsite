{"ast":null,"code":"var _jsxFileName = \"/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SplitsSta.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Splits = ({\n  data,\n  isImageLeft\n}) => /*#__PURE__*/_jsxDEV(\"article\", {\n  className: \"Split-container\",\n  style: {\n    flexDirection: isImageLeft ? 'row' : 'row-reverse',\n    alignItems: 'center',\n    marginBottom: '20px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"descrip\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: data.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: data.eplaination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"points\",\n      children: Object.entries(data.split).map(([exercise, link]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: exercise\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this)\n      }, exercise, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"images\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.pic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n_c = Splits;\nconst SplitsSta = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"splitSta\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link-to\",\n    id: \"split\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Current Split\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 13\n  }, this), data.map((job, index) => /*#__PURE__*/_jsxDEV(Splits, {\n    data: job,\n    isImageLeft: index % 2 === 0\n  }, job.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 13\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 5\n}, this);\n_c2 = SplitsSta;\nSplitsSta.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    eplaination: PropTypes.string,\n    pic: PropTypes.string,\n    split: PropTypes.arrayOf(PropTypes.string)\n  }))\n};\nSplits.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    eplaination: PropTypes.string.isRequired,\n    pic: PropTypes.string.isRequired,\n    split: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }).isRequired\n};\nexport default SplitsSta;\nvar _c, _c2;\n$RefreshReg$(_c, \"Splits\");\n$RefreshReg$(_c2, \"SplitsSta\");","map":{"version":3,"names":["React","PropTypes","Markdown","dayjs","jsxDEV","_jsxDEV","Splits","data","isImageLeft","className","style","flexDirection","alignItems","marginBottom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","eplaination","Object","entries","split","map","exercise","link","href","target","rel","src","pic","_c","SplitsSta","id","job","index","_c2","propTypes","arrayOf","shape","string","isRequired","$RefreshReg$"],"sources":["/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SplitsSta.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\n\nconst Splits = ({ data, isImageLeft }) => (\n    <article className=\"Split-container\" style={{flexDirection: isImageLeft ? 'row' : 'row-reverse', alignItems: 'center', marginBottom: '20px' }}>\n        <div className='descrip'>\n            <header>\n                <h4>{data.title}</h4>\n                <p>{data.eplaination}</p>\n            </header>\n            <ul className=\"points\">\n                {Object.entries(data.split).map(([exercise, link]) => (\n                <li key={exercise}>\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {exercise}\n                </a>\n                </li>\n                ))}\n            </ul>\n        </div>\n        <div className='images'>\n            <img src={data.pic}/>\n        </div>\n    </article>\n);\n\nconst SplitsSta = ({ data }) => (\n    <div className=\"splitSta\">\n        <div className=\"link-to\" id=\"split\" />\n            <div className=\"title\">\n                <h3>Current Split</h3>\n            </div>\n            {data.map((job, index) => (\n            <Splits\n                data={job}\n                key={job.title}\n                isImageLeft={index % 2 === 0}\n            />\n            ))}\n            \n    </div>\n);\n\nSplitsSta.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        eplaination: PropTypes.string,\n        pic: PropTypes.string,\n        split: PropTypes.arrayOf(PropTypes.string),\n    })),\n};\n\nSplits.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        eplaination: PropTypes.string.isRequired,\n        pic: PropTypes.string.isRequired,\n        split: PropTypes.arrayOf(PropTypes.string.isRequired),\n    }).isRequired,\n};\n\nexport default SplitsSta;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}