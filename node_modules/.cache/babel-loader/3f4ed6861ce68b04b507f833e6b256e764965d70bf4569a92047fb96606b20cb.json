{"ast":null,"code":"var _jsxFileName = \"/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SplitsSta.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Splits = ({\n  data\n}) =>\n/*#__PURE__*/\n//   name: \n//   position: \n//   companyProfile:\n//   startDate: \n//   endDate: \n//   summary: \n//   techStack\n_jsxDEV(\"article\", {\n  className: \"Split-container\",\n  children: [/*#__PURE__*/_jsxDEV(\"header\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.eplaination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"points\",\n    children: Object.entries(data.split).map(([exercise, link]) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: link,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: exercise\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, exercise, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this);\n_c = Splits;\nconst SplitsSta = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"splitSta\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link-to\",\n    id: \"split\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Current Split\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this), data.map(job => /*#__PURE__*/_jsxDEV(Splits, {\n    data: job\n  }, job.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 5\n}, this);\n_c2 = SplitsSta;\nSplitsSta.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    position: PropTypes.string,\n    companyProfile: PropTypes.string,\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    summary: PropTypes.arrayOf(PropTypes.string)\n  }))\n};\nSplits.propTypes = {\n  data: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    position: PropTypes.string.isRequired,\n    companyProfile: PropTypes.string.isRequired,\n    startDate: PropTypes.string.isRequired,\n    endDate: PropTypes.string.isRequired,\n    summary: PropTypes.arrayOf(PropTypes.string.isRequired)\n  }).isRequired\n};\nexport default SplitsSta;\nvar _c, _c2;\n$RefreshReg$(_c, \"Splits\");\n$RefreshReg$(_c2, \"SplitsSta\");","map":{"version":3,"names":["React","PropTypes","Markdown","dayjs","jsxDEV","_jsxDEV","Splits","data","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","eplaination","Object","entries","split","map","exercise","link","href","target","rel","_c","SplitsSta","id","job","_c2","propTypes","arrayOf","shape","name","string","position","companyProfile","startDate","endDate","summary","isRequired","$RefreshReg$"],"sources":["/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SplitsSta.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\n\nconst Splits = ({ data }) => (\n    //   name: \n    //   position: \n    //   companyProfile:\n    //   startDate: \n    //   endDate: \n    //   summary: \n    //   techStack\n    <article className=\"Split-container\">\n        <header>\n            <h4>{data.title}</h4>\n            <p>{data.eplaination}</p>\n        </header>\n        <ul className=\"points\">\n            {Object.entries(data.split).map(([exercise, link]) => (\n            <li key={exercise}>\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                {exercise}\n            </a>\n            </li>\n            ))}\n        </ul>\n    </article>\n);\n\nconst SplitsSta = ({ data }) => (\n    <div className=\"splitSta\">\n        <div className=\"link-to\" id=\"split\" />\n            <div className=\"title\">\n                <h3>Current Split</h3>\n            </div>\n            {data.map((job) => (\n            <Splits\n                data={job}\n                key={job.title}\n            />\n            ))}\n            \n    </div>\n);\n\nSplitsSta.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        position: PropTypes.string,\n        companyProfile: PropTypes.string,\n        startDate: PropTypes.string,\n        endDate: PropTypes.string,\n        summary: PropTypes.arrayOf(PropTypes.string),\n    })),\n};\n\nSplits.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        position: PropTypes.string.isRequired,\n        companyProfile: PropTypes.string.isRequired,\n        startDate: PropTypes.string.isRequired,\n        endDate: PropTypes.string.isRequired,\n        summary: PropTypes.arrayOf(PropTypes.string.isRequired),\n    }).isRequired,\n};\n\nexport default SplitsSta;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}