{"ast":null,"code":"import React from'react';import Markdown from'markdown-to-jsx';import dayjs from'dayjs';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Job=function Job(_ref){var data=_ref.data;return/*#__PURE__*/ (//   name: \n//   position: \n//   companyProfile:\n//   startDate: \n//   endDate: \n//   summary: \n//   techStack\n_jsxs(\"article\",{className:\"jobs-container\",children:[/*#__PURE__*/_jsxs(\"header\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"company\",children:data.name}),/*#__PURE__*/_jsx(\"p\",{className:\"location\",children:data.location})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"position\",children:data.position}),/*#__PURE__*/_jsxs(\"p\",{className:\"year\",children:[dayjs(data.startDate).format('MMMM YYYY'),\" - \",data.endDate?dayjs(data.endDate).format('MMMM YYYY'):'PRESENT']})]})]}),/*#__PURE__*/_jsx(\"p\",{className:\"companyProfile\",children:data.companyProfile}),/*#__PURE__*/_jsx(\"ul\",{className:\"points\",children:data.summary.map(function(point){return/*#__PURE__*/_jsx(\"li\",{children:point},point);})})]}));};var Experience=function Experience(_ref2){var data=_ref2.data;return/*#__PURE__*/_jsxs(\"div\",{className:\"experience\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"link-to\",id:\"experience\"}),/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"Experiences\"})}),data.map(function(job){return/*#__PURE__*/_jsx(Job,{data:job},\"\".concat(job.name,\"-\").concat(job.position));})]});};export default Experience;","map":{"version":3,"names":["React","Markdown","dayjs","jsx","_jsx","jsxs","_jsxs","Job","_ref","data","className","children","name","location","position","startDate","format","endDate","companyProfile","summary","map","point","Experience","_ref2","id","job","concat"],"sources":["/Users/songss/Desktop/personalWebsite/my-app/src/components/Resume/Experience.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\n\nconst Job = ({ data }) => (\n    //   name: \n    //   position: \n    //   companyProfile:\n    //   startDate: \n    //   endDate: \n    //   summary: \n    //   techStack\n    <article className=\"jobs-container\">\n      <header>\n        <div className='container'>\n            <h4 className='company'>{data.name}</h4>\n            <p className='location'>{data.location}</p>\n        </div>\n        <div className='container'>\n            <p className=\"position\">{data.position}</p>\n            <p className='year'>{dayjs(data.startDate).format('MMMM YYYY')} - {data.endDate ? dayjs(data.endDate).format('MMMM YYYY') : 'PRESENT'}</p>\n        </div>\n        </header>\n       <p className='companyProfile'>{data.companyProfile}</p>\n        <ul className=\"points\">\n           {data.summary.map((point) => (\n            <li key={point}>{point}</li>\n            ))\n            }\n      </ul>\n    </article>\n);\n\nconst Experience = ({ data }) => (\n    <div className=\"experience\">\n        <div className=\"link-to\" id=\"experience\" />\n            <div className=\"title\">\n                <h3>Experiences</h3>\n            </div>\n            {data.map((job) => (\n            <Job\n                data={job}\n                key={`${job.name}-${job.position}`}\n            />\n            ))}\n            \n    </div>\n);\n\nExperience.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        position: PropTypes.string,\n        companyProfile: PropTypes.string,\n        startDate: PropTypes.string,\n        endDate: PropTypes.string,\n        summary: PropTypes.arrayOf(PropTypes.string),\n    })),\n};\n\nJob.propTypes = {\n    data: PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        position: PropTypes.string.isRequired,\n        companyProfile: PropTypes.string.isRequired,\n        startDate: PropTypes.string.isRequired,\n        endDate: PropTypes.string.isRequired,\n        summary: PropTypes.arrayOf(PropTypes.string.isRequired),\n    }).isRequired,\n};\n\nexport default Experience;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,CAAAC,QAAQ,KAAM,iBAAiB,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1B,GAAM,CAAAC,GAAG,CAAG,QAAN,CAAAA,GAAGA,CAAAC,IAAA,KAAM,CAAAC,IAAI,CAAAD,IAAA,CAAJC,IAAI,qBACf;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,KAAA,YAASI,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eACjCL,KAAA,WAAAK,QAAA,eACEL,KAAA,QAAKI,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBP,IAAA,OAAIM,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEF,IAAI,CAACG,IAAI,CAAK,CAAC,cACxCR,IAAA,MAAGM,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEF,IAAI,CAACI,QAAQ,CAAI,CAAC,EAC1C,CAAC,cACNP,KAAA,QAAKI,SAAS,CAAC,WAAW,CAAAC,QAAA,eACtBP,IAAA,MAAGM,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAEF,IAAI,CAACK,QAAQ,CAAI,CAAC,cAC3CR,KAAA,MAAGI,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAET,KAAK,CAACO,IAAI,CAACM,SAAS,CAAC,CAACC,MAAM,CAAC,WAAW,CAAC,CAAC,KAAG,CAACP,IAAI,CAACQ,OAAO,CAAGf,KAAK,CAACO,IAAI,CAACQ,OAAO,CAAC,CAACD,MAAM,CAAC,WAAW,CAAC,CAAG,SAAS,EAAI,CAAC,EACzI,CAAC,EACE,CAAC,cACVZ,IAAA,MAAGM,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEF,IAAI,CAACS,cAAc,CAAI,CAAC,cACtDd,IAAA,OAAIM,SAAS,CAAC,QAAQ,CAAAC,QAAA,CAClBF,IAAI,CAACU,OAAO,CAACC,GAAG,CAAC,SAACC,KAAK,qBACvBjB,IAAA,OAAAO,QAAA,CAAiBU,KAAK,EAAbA,KAAkB,CAAC,EAC3B,CAAC,CAEJ,CAAC,EACE,CAAC,GACb,CAED,GAAM,CAAAC,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAAC,KAAA,KAAM,CAAAd,IAAI,CAAAc,KAAA,CAAJd,IAAI,oBACtBH,KAAA,QAAKI,SAAS,CAAC,YAAY,CAAAC,QAAA,eACvBP,IAAA,QAAKM,SAAS,CAAC,SAAS,CAACc,EAAE,CAAC,YAAY,CAAE,CAAC,cACvCpB,IAAA,QAAKM,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClBP,IAAA,OAAAO,QAAA,CAAI,aAAW,CAAI,CAAC,CACnB,CAAC,CACLF,IAAI,CAACW,GAAG,CAAC,SAACK,GAAG,qBACdrB,IAAA,CAACG,GAAG,EACAE,IAAI,CAAEgB,GAAI,KAAAC,MAAA,CACFD,GAAG,CAACb,IAAI,MAAAc,MAAA,CAAID,GAAG,CAACX,QAAQ,CACnC,CAAC,EACD,CAAC,EAEL,CAAC,EACT,CAwBD,cAAe,CAAAQ,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}