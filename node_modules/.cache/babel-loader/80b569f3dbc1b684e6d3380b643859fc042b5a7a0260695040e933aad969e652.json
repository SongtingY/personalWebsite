{"ast":null,"code":"var _jsxFileName = \"/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SplitsSta.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Splits = ({\n  data,\n  isImageLeft\n}) => /*#__PURE__*/_jsxDEV(\"article\", {\n  className: \"Split-container\",\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"descrip\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: data.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.eplaination\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"points\",\n        children: Object.entries(data.split).map(([exercise, link]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: exercise\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 17\n          }, this)\n        }, exercise, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"images\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: data.pic\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 7,\n  columnNumber: 5\n}, this);\n_c = Splits;\nconst SplitsSta = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"splitSta\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"link-to\",\n    id: \"split\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"title\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Current Split\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this), data.map((job, index) => /*#__PURE__*/_jsxDEV(Splits, {\n    data: job,\n    isImageLeft: index % 2 === 0\n  }, job.title, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 13\n  }, this))]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 5\n}, this);\n_c2 = SplitsSta;\nSplitsSta.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.string,\n    eplaination: PropTypes.string,\n    pic: PropTypes.string,\n    split: PropTypes.arrayOf(PropTypes.string)\n  }))\n};\nSplits.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    eplaination: PropTypes.string.isRequired,\n    pic: PropTypes.string.isRequired,\n    split: PropTypes.objectOf(PropTypes.string)\n  }).isRequired\n};\nexport default SplitsSta;\nvar _c, _c2;\n$RefreshReg$(_c, \"Splits\");\n$RefreshReg$(_c2, \"SplitsSta\");","map":{"version":3,"names":["React","PropTypes","Markdown","dayjs","jsxDEV","_jsxDEV","Splits","data","isImageLeft","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","eplaination","Object","entries","split","map","exercise","link","href","target","rel","src","pic","_c","SplitsSta","id","job","index","_c2","propTypes","arrayOf","shape","string","isRequired","objectOf","$RefreshReg$"],"sources":["/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SplitsSta.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Markdown from 'markdown-to-jsx';\nimport dayjs from 'dayjs';\n\nconst Splits = ({ data, isImageLeft }) => (\n    <article className=\"Split-container\">\n    <div>\n        <div className='descrip'>\n            <header>\n                <h4>{data.title}</h4>\n                <p>{data.eplaination}</p>\n            </header>\n            <ul className=\"points\">\n                {Object.entries(data.split).map(([exercise, link]) => (\n                <li key={exercise}>\n                <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {exercise}\n                </a>\n                </li>\n                ))}\n            </ul>\n        </div>\n        <div className='images'>\n            <img src={data.pic}/>\n        </div>\n        </div>\n    </article>\n);\n\nconst SplitsSta = ({ data }) => (\n    <div className=\"splitSta\">\n        <div className=\"link-to\" id=\"split\" />\n            <div className=\"title\">\n                <h3>Current Split</h3>\n            </div>\n            {data.map((job, index) => (\n            <Splits\n                data={job}\n                key={job.title}\n                isImageLeft={index % 2 === 0}\n            />\n            ))}\n            \n    </div>\n);\n\nSplitsSta.propTypes = {\n    data: PropTypes.arrayOf(PropTypes.shape({\n        title: PropTypes.string,\n        eplaination: PropTypes.string,\n        pic: PropTypes.string,\n        split: PropTypes.arrayOf(PropTypes.string),\n    })),\n};\n\nSplits.propTypes = {\n    data: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        eplaination: PropTypes.string.isRequired,\n        pic: PropTypes.string.isRequired,\n        split: PropTypes.objectOf(\n            PropTypes.string\n        )\n    }).isRequired,\n};\n\nexport default SplitsSta;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}