{"ast":null,"code":"import _slicedToArray from\"/Users/songss/Desktop/personalWebsite/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import SBDComponents from'./SBD/SBDComponents';// Ensure you import SBD correctly\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LB_TO_KG=0.45;var KG_TO_LB=2.20;var convertWeight=function convertWeight(weight,currentUnit){return currentUnit==='LBS'?(weight*LB_TO_KG).toFixed(0):(weight*KG_TO_LB).toFixed(2);};var SBDSta=function SBDSta(_ref){var initialData=_ref.initialData;// const [data, setData] = useState(initialData);\nvar _useState=useState('LBS'),_useState2=_slicedToArray(_useState,2),unit=_useState2[0],setUnit=_useState2[1];var toggleWeightUnit=function toggleWeightUnit(){var newUnit=unit==='LBS'?'kg':'LBS';// setData(convertedData);\nsetUnit(newUnit);};return/*#__PURE__*/_jsxs(\"div\",{className:\"sbdStatists\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:/*#__PURE__*/_jsx(\"h3\",{children:\"SBD Statistics\"})}),/*#__PURE__*/_jsxs(\"button\",{onClick:toggleWeightUnit,children:[\"Switch to \",unit==='LBS'?'kg':'LBS']}),/*#__PURE__*/_jsxs(\"div\",{className:\"time\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Current\"})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"b\",{children:\"Goal\"})})]}),/*#__PURE__*/_jsx(\"article\",{className:\"sbd-container\",children:initialData.map(function(sta,index){return/*#__PURE__*/_jsx(SBDComponents,{data:sta,unit:unit,convertWeight:convertWeight,index:index},sta.name);})})]});};export default SBDSta;","map":{"version":3,"names":["React","useState","SBDComponents","jsx","_jsx","jsxs","_jsxs","LB_TO_KG","KG_TO_LB","convertWeight","weight","currentUnit","toFixed","SBDSta","_ref","initialData","_useState","_useState2","_slicedToArray","unit","setUnit","toggleWeightUnit","newUnit","className","children","onClick","map","sta","index","data","name"],"sources":["/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SBDSta.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SBDComponents from './SBD/SBDComponents'; // Ensure you import SBD correctly\n\nconst LB_TO_KG = 0.45;\nconst KG_TO_LB = 2.20;\n\nconst convertWeight = (weight, currentUnit) => {\n    return currentUnit === 'LBS' ? (weight * LB_TO_KG).toFixed(0) : (weight * KG_TO_LB).toFixed(2);\n};\n\nconst SBDSta = ({ initialData }) => {\n\n    // const [data, setData] = useState(initialData);\n    \n    const [unit, setUnit] = useState('LBS');\n\n    const toggleWeightUnit = () => {\n        const newUnit = unit === 'LBS' ? 'kg' : 'LBS';\n        // setData(convertedData);\n        setUnit(newUnit);\n    };\n    \n\n    return (\n        <div className=\"sbdStatists\">\n            <div className=\"title\">\n                <h3>SBD Statistics</h3>\n            </div>\n            <button onClick={toggleWeightUnit}>Switch to {unit === 'LBS' ? 'kg' : 'LBS'}</button>\n            <div className='time'>\n                <div><b>Current</b></div>\n                <div><b>Goal</b></div>\n            </div>\n            <article className=\"sbd-container\">\n                {initialData.map((sta, index) => (\n                <SBDComponents\n                    key={sta.name}\n                    data={sta}\n                    unit={unit}\n                    convertWeight={convertWeight}\n                    index={index}\n                />\n                ))}\n            </article>\n        </div>\n    );\n};\n\nSBDSta.propTypes = {\n    initialData: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        currentWeight: PropTypes.string,\n        goalWeight: PropTypes.string,\n        unit: PropTypes.string,\n    })),\n};\n\nexport default SBDSta;\n"],"mappings":"kIAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAEvC,MAAO,CAAAC,aAAa,KAAM,qBAAqB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEjD,GAAM,CAAAC,QAAQ,CAAG,IAAI,CACrB,GAAM,CAAAC,QAAQ,CAAG,IAAI,CAErB,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAIC,MAAM,CAAEC,WAAW,CAAK,CAC3C,MAAO,CAAAA,WAAW,GAAK,KAAK,CAAG,CAACD,MAAM,CAAGH,QAAQ,EAAEK,OAAO,CAAC,CAAC,CAAC,CAAG,CAACF,MAAM,CAAGF,QAAQ,EAAEI,OAAO,CAAC,CAAC,CAAC,CAClG,CAAC,CAED,GAAM,CAAAC,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAAC,IAAA,CAAwB,IAAlB,CAAAC,WAAW,CAAAD,IAAA,CAAXC,WAAW,CAEzB;AAEA,IAAAC,SAAA,CAAwBf,QAAQ,CAAC,KAAK,CAAC,CAAAgB,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAhCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB,GAAM,CAAAI,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAA,CAAS,CAC3B,GAAM,CAAAC,OAAO,CAAGH,IAAI,GAAK,KAAK,CAAG,IAAI,CAAG,KAAK,CAC7C;AACAC,OAAO,CAACE,OAAO,CAAC,CACpB,CAAC,CAGD,mBACIhB,KAAA,QAAKiB,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxBpB,IAAA,QAAKmB,SAAS,CAAC,OAAO,CAAAC,QAAA,cAClBpB,IAAA,OAAAoB,QAAA,CAAI,gBAAc,CAAI,CAAC,CACtB,CAAC,cACNlB,KAAA,WAAQmB,OAAO,CAAEJ,gBAAiB,CAAAG,QAAA,EAAC,YAAU,CAACL,IAAI,GAAK,KAAK,CAAG,IAAI,CAAG,KAAK,EAAS,CAAC,cACrFb,KAAA,QAAKiB,SAAS,CAAC,MAAM,CAAAC,QAAA,eACjBpB,IAAA,QAAAoB,QAAA,cAAKpB,IAAA,MAAAoB,QAAA,CAAG,SAAO,CAAG,CAAC,CAAK,CAAC,cACzBpB,IAAA,QAAAoB,QAAA,cAAKpB,IAAA,MAAAoB,QAAA,CAAG,MAAI,CAAG,CAAC,CAAK,CAAC,EACrB,CAAC,cACNpB,IAAA,YAASmB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC7BT,WAAW,CAACW,GAAG,CAAC,SAACC,GAAG,CAAEC,KAAK,qBAC5BxB,IAAA,CAACF,aAAa,EAEV2B,IAAI,CAAEF,GAAI,CACVR,IAAI,CAAEA,IAAK,CACXV,aAAa,CAAEA,aAAc,CAC7BmB,KAAK,CAAEA,KAAM,EAJRD,GAAG,CAACG,IAKZ,CAAC,EACD,CAAC,CACG,CAAC,EACT,CAAC,CAEd,CAAC,CAWD,cAAe,CAAAjB,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}