{"ast":null,"code":"var _jsxFileName = \"/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SBDSta.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SBDComponents from './SBD/SBDComponents'; // Ensure you import SBD correctly\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LB_TO_KG = 0.45;\nconst KG_TO_LB = 2.20;\nconst convertWeight = (weight, currentUnit) => {\n  return currentUnit === 'LBS' ? (weight * LB_TO_KG).toFixed(0) : (weight * KG_TO_LB).toFixed(2);\n};\nconst SBDSta = ({\n  initialData\n}) => {\n  _s();\n  // const [data, setData] = useState(initialData);\n\n  const [unit, setUnit] = useState('LBS');\n  const toggleWeightUnit = () => {\n    const newUnit = unit === 'LBS' ? 'kg' : 'LBS';\n\n    // const convertedData = data.map(item => ({\n    //     ...item,\n    //     currentWeight: convertWeight(item.currentWeight, unit),\n    //     goalWeight: convertWeight(item.goalWeight, unit),\n    // }));\n\n    // // Debug: Log the converted data to see if conversion is correct\n    // // console.log('Converted Data:', convertedData);\n\n    // setData(convertedData);\n    setUnit(newUnit);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sbdStatists\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SBD Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleWeightUnit,\n        children: [\"Switch to \", unit === 'LBS' ? 'kg' : 'LBS']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Current\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Goal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n      className: \"sbd-container\",\n      children: initialData.map(sta => /*#__PURE__*/_jsxDEV(SBDComponents, {\n        data: sta,\n        unit: unit,\n        convertWeight: convertWeight\n      }, sta.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(SBDSta, \"UyyL+zm8J6Xk1q41XGgVF2IoI/g=\");\n_c = SBDSta;\nSBDSta.propTypes = {\n  initialData: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    currentWeight: PropTypes.string,\n    goalWeight: PropTypes.string,\n    unit: PropTypes.string\n  }))\n};\nexport default SBDSta;\nvar _c;\n$RefreshReg$(_c, \"SBDSta\");","map":{"version":3,"names":["React","useState","PropTypes","SBDComponents","jsxDEV","_jsxDEV","LB_TO_KG","KG_TO_LB","convertWeight","weight","currentUnit","toFixed","SBDSta","initialData","_s","unit","setUnit","toggleWeightUnit","newUnit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","sta","data","name","_c","propTypes","arrayOf","shape","string","currentWeight","goalWeight","$RefreshReg$"],"sources":["/Users/songss/Desktop/personalWebsite/my-app/src/components/Fitness/SBDSta.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SBDComponents from './SBD/SBDComponents'; // Ensure you import SBD correctly\n\nconst LB_TO_KG = 0.45;\nconst KG_TO_LB = 2.20;\n\nconst convertWeight = (weight, currentUnit) => {\n    return currentUnit === 'LBS' ? (weight * LB_TO_KG).toFixed(0) : (weight * KG_TO_LB).toFixed(2);\n};\n\nconst SBDSta = ({ initialData }) => {\n\n    // const [data, setData] = useState(initialData);\n    \n    const [unit, setUnit] = useState('LBS');\n\n    const toggleWeightUnit = () => {\n        const newUnit = unit === 'LBS' ? 'kg' : 'LBS';\n\n        // const convertedData = data.map(item => ({\n        //     ...item,\n        //     currentWeight: convertWeight(item.currentWeight, unit),\n        //     goalWeight: convertWeight(item.goalWeight, unit),\n        // }));\n\n        // // Debug: Log the converted data to see if conversion is correct\n        // // console.log('Converted Data:', convertedData);\n\n        // setData(convertedData);\n        setUnit(newUnit);\n    };\n    \n\n    return (\n        <div className=\"sbdStatists\">\n            <div className='title-container'>\n                <div className=\"title\">\n                    <h3>SBD Statistics</h3>\n                </div>\n                <button onClick={toggleWeightUnit}>Switch to {unit === 'LBS' ? 'kg' : 'LBS'}</button>\n            </div>\n            <div className='time'>\n                <div><b>Current</b></div>\n                <div><b>Goal</b></div>\n            </div>\n            <article className=\"sbd-container\">\n                {initialData.map((sta) => (\n                <SBDComponents\n                    key={sta.name}\n                    data={sta}\n                    unit={unit}\n                    convertWeight={convertWeight}\n                />\n                ))}\n            </article>\n        </div>\n    );\n};\n\nSBDSta.propTypes = {\n    initialData: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        currentWeight: PropTypes.string,\n        goalWeight: PropTypes.string,\n        unit: PropTypes.string,\n    })),\n};\n\nexport default SBDSta;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}